version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: automedia-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: automedia
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - automedia-network

  # Redis
  redis:
    image: redis:7.0-alpine
    container_name: automedia-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - automedia-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: automedia-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/automedia?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      TWITTER_BEARER_TOKEN: ${TWITTER_BEARER_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
      CLIENT_URL: http://localhost:3000
    volumes:
      - ./server:/app/server
      - ./shared:/app/shared
    depends_on:
      - mongodb
      - redis
    networks:
      - automedia-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: automedia-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      VITE_API_URL: http://localhost:5000
    volumes:
      - ./client:/app/client
      - ./shared:/app/shared
    depends_on:
      - backend
    networks:
      - automedia-network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: automedia-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - automedia-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  automedia-network:
    driver: bridge