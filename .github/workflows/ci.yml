name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-type: [unit, integration, e2e]

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      if: matrix.test-type == 'e2e'
      run: npx playwright install --with-deps

    - name: Run unit tests
      if: matrix.test-type == 'unit'
      run: npm run test

    - name: Run integration tests
      if: matrix.test-type == 'integration'
      run: |
        npm run build
        npm run test:integration

    - name: Run E2E tests
      if: matrix.test-type == 'e2e'
      run: |
        npm run build
        npx playwright test
      env:
        PLAYWRIGHT_HEADLESS: true

    - name: Upload test results
      if: matrix.test-type == 'e2e'
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/

    - name: Upload coverage to Codecov
      if: matrix.test-type == 'unit'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Check for vulnerabilities
      uses: securecodewarrior/github-action-add-sarif@v1
      if: always()
      with:
        sarif-file: 'security-scan.sarif'

  quality:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Check formatting
      run: npm run format:check

    - name: Run type checking
      run: npm run typecheck

  performance:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Analyze bundle size
      run: npm run analyze:bundle

    - name: Run Lighthouse CI
      run: npm run lighthouse:ci